@Library('aem-opencloud-manager') _

def configString = libraryResource 'aem_opencloud/config.json'
def config = readJSON text: configString

pipeline {
    agent {
        docker {
            image params.JENKINS_AGENT_DOCKER_IMAGE
            args params.JENKINS_AGENT_DOCKER_ARGS
        }
    }
    environment {
        TMPDIR = "/tmp/shinesolutions/aem-opencloud-manager"
        AOC_CONFIG_DIR = "${env.TMPDIR}/aem-opencloud-config"

    }
    parameters {
        string(name: 'AOC_VERSION_AEM_STACK_MANAGER_MESSENGER', defaultValue: config.library.aem_stack_manager_messenger, description: 'Version of aem-stack-manager-messenger repo')
    }
    stages {
        stage('Initialise pipeline') {
            steps {

                JenkinsInit(this, params.AOC_CUSTOM_MANAGER_STEPS_ARTIFACT_URL, env.TMPDIR)

                JenkinsPipelinePreStep this
            }
        }
        stage('Prepare libraries') {
            steps {


                    JenkinsStagePreStep this

                    AocPrepareLibrary(this, "aem-stack-manager-messenger", params.AOC_VERSION_AEM_STACK_MANAGER_MESSENGER, params.AWS_LIBRARY_S3_BUCKET, AWS_LIBRARY_S3_PATH, env.TMPDIR)
                    AocPrepareConfig(this, params.AOC_CONFIG_ARTIFACT_URL, env.TMPDIR)
            }
            post {
                always {

                    JenkinsStagePostStep this
                }
            }
        }
        stage('Resolve dependencies') {
            steps {


                    JenkinsStagePreStep this

                    ExecCommand(this, env.TMPDIR, "aem-stack-manager-messenger", "make deps")
            }
            post {
                always {

                    JenkinsStagePostStep this
                }
            }
        }
        stage('Trigger AEM Stack Manager event') {
            steps {


                    JenkinsStagePreStep this

                    ExecCommand(this, env.TMPDIR, "aem-stack-manager-messenger", "make offline-snapshot-full-set stack_prefix=${params.STACK_MANAGER_STACK_PREFIX} target_aem_stack_prefix=${params.STACK_PREFIX} config_path=${env.AOC_CONFIG_DIR}/aem-stack-manager-messenger/${params.AOC_CONFIG_PROFILE_AEM_STACK_MANAGER_MESSENGER}/")
            }
            post {
                always {

                    JenkinsStagePostStep this
                }
            }
        }
    }
    post {
        always {

            JenkinsPipelinePostStep this
        }
    }
}
